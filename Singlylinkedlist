class Node:
    def __init__(self, data=None):
        self.data = data
        self.next = None


class SinglyLinkedList:
    def __init__(self):
        self.head = None

    def insert_at_end(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node

    def insert_at_beginning(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node

    def insert_at_position(self, data, position):
        if position < 0:
            raise ValueError("Position cannot be negative")
        if position == 0:
            self.insert_at_beginning(data)
            return
        new_node = Node(data)
        current = self.head
        for _ in range(position - 1):
            if current is None:
                raise IndexError("Position out of range")
            current = current.next
        if current is None:
            raise IndexError("Position out of range")
        new_node.next = current.next
        current.next = new_node

    def display(self):
        current = self.head
        while current:
            print(current.data, end=" ")
            current = current.next
        print()


# Test Case
def test_singly_linked_list():
    # Insert elements (1, 2, 3)
    linked_list = SinglyLinkedList()
    for value in [1, 2, 3]:
        linked_list.insert_at_end(value)

    # Display the list to verify the order
    linked_list.display()
    assert [1, 2, 3] == [node.data for node in linked_list], "Insert and Display test failed"

    # Insert at different positions
    linked_list.insert_at_beginning(0)  # Insert at the beginning
    linked_list.insert_at_position(2.5, 3)  # Insert at the middle
    linked_list.insert_at_position(4, 5)  # Insert at the end
    linked_list.display()

    expected_output = [0, 1, 2, 2.5, 3, 4]
    assert expected_output == [node.data for node in linked_list], "Insert at Different Positions test failed"

    print("All test cases passed successfully.")


if __name__ == "__main__":
    test_singly_linked_list()
